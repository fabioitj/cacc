{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabio\\\\Documents\\\\cacc\\\\cacc_frontend\\\\src\\\\components\\\\Particles\\\\Particles.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParticlesComp = () => {\n  _s();\n\n  const particlesInit = useCallback(async engine => {\n    console.log(engine); // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    options: {\n      fpsLimit: 240,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\"\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\"\n          },\n          resize: true\n        },\n        modes: {\n          push: {\n            quantity: 2\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.5\n          }\n        }\n      },\n      particles: {\n        color: {\n          value: \"#009AFF\"\n        },\n        links: {\n          color: \"#012A62\",\n          distance: 150,\n          enable: true,\n          opacity: 0.8,\n          width: 1\n        },\n        collisions: {\n          enable: true\n        },\n        move: {\n          directions: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\"\n          },\n          random: true,\n          speed: 10,\n          straight: false\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 1000\n          },\n          value: 80\n        },\n        opacity: {\n          value: 0.5\n        },\n        shape: {\n          type: \"circle\"\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 7\n          }\n        }\n      },\n      detectRetina: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ParticlesComp, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n\n_c = ParticlesComp;\nexport default ParticlesComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParticlesComp\");","map":{"version":3,"names":["useCallback","Particles","loadFull","ParticlesComp","particlesInit","engine","console","log","particlesLoaded","container","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina"],"sources":["C:/Users/fabio/Documents/cacc/cacc_frontend/src/components/Particles/Particles.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nconst ParticlesComp = () => {\r\n    const particlesInit = useCallback(async (engine) => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadFull(engine);\r\n    }, []);\r\n    \r\n    const particlesLoaded = useCallback(async (container) => {\r\n        await console.log(container);\r\n    }, []);\r\n    \r\n    return (\r\n        <Particles id=\"tsparticles\"\r\n        init={particlesInit}\r\n        loaded={particlesLoaded}\r\n        options={{\r\n            fpsLimit: 240,\r\n            interactivity: {\r\n                events: {\r\n                    onClick: {\r\n                        enable: true,\r\n                        mode: \"push\",\r\n                    },\r\n                    onHover: {\r\n                        enable: true,\r\n                        mode: \"repulse\",\r\n                    },\r\n                    resize: true,\r\n                },\r\n                modes: {\r\n                    push: {\r\n                        quantity: 2,\r\n                    },\r\n                    repulse: {\r\n                        distance: 200,\r\n                        duration: 0.5,\r\n                    },\r\n                },\r\n            },\r\n            particles: {\r\n                color: {\r\n                    value: \"#009AFF\",\r\n                },\r\n                links: {\r\n                    color: \"#012A62\",\r\n                    distance: 150,\r\n                    enable: true,\r\n                    opacity: 0.8,\r\n                    width: 1,\r\n                },\r\n                collisions: {\r\n                    enable: true,\r\n                },\r\n                move: {\r\n                    directions: \"none\",\r\n                    enable: true,\r\n                    outModes: {\r\n                        default: \"bounce\",\r\n                    },\r\n                    random: true,\r\n                    speed: 10,\r\n                    straight: false,\r\n                },\r\n                number: {\r\n                    density: {\r\n                        enable: true,\r\n                        area: 1000,\r\n                    },\r\n                    value: 80,\r\n                },\r\n                opacity: {\r\n                    value: 0.5,\r\n                },\r\n                shape: {\r\n                    type: \"circle\",\r\n                },\r\n                size: {\r\n                    value: { min: 1, max: 7 },\r\n                },\r\n            },\r\n            detectRetina: true,\r\n        }}/>\r\n    );\r\n}\r\n\r\nexport default ParticlesComp\r\n\r\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACxB,MAAMC,aAAa,GAAGJ,WAAW,CAAC,MAAOK,MAAP,IAAkB;IAChDC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADgD,CAEhD;IACA;IACA;;IACA,MAAMH,QAAQ,CAACG,MAAD,CAAd;EACH,CANgC,EAM9B,EAN8B,CAAjC;EAQA,MAAMG,eAAe,GAAGR,WAAW,CAAC,MAAOS,SAAP,IAAqB;IACrD,MAAMH,OAAO,CAACC,GAAR,CAAYE,SAAZ,CAAN;EACH,CAFkC,EAEhC,EAFgC,CAAnC;EAIA,oBACI,QAAC,SAAD;IAAW,EAAE,EAAC,aAAd;IACA,IAAI,EAAEL,aADN;IAEA,MAAM,EAAEI,eAFR;IAGA,OAAO,EAAE;MACLE,QAAQ,EAAE,GADL;MAELC,aAAa,EAAE;QACXC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLC,MAAM,EAAE,IADH;YAELC,IAAI,EAAE;UAFD,CADL;UAKJC,OAAO,EAAE;YACLF,MAAM,EAAE,IADH;YAELC,IAAI,EAAE;UAFD,CALL;UASJE,MAAM,EAAE;QATJ,CADG;QAYXC,KAAK,EAAE;UACHC,IAAI,EAAE;YACFC,QAAQ,EAAE;UADR,CADH;UAIHC,OAAO,EAAE;YACLC,QAAQ,EAAE,GADL;YAELC,QAAQ,EAAE;UAFL;QAJN;MAZI,CAFV;MAwBLC,SAAS,EAAE;QACPC,KAAK,EAAE;UACHC,KAAK,EAAE;QADJ,CADA;QAIPC,KAAK,EAAE;UACHF,KAAK,EAAE,SADJ;UAEHH,QAAQ,EAAE,GAFP;UAGHR,MAAM,EAAE,IAHL;UAIHc,OAAO,EAAE,GAJN;UAKHC,KAAK,EAAE;QALJ,CAJA;QAWPC,UAAU,EAAE;UACRhB,MAAM,EAAE;QADA,CAXL;QAcPiB,IAAI,EAAE;UACFC,UAAU,EAAE,MADV;UAEFlB,MAAM,EAAE,IAFN;UAGFmB,QAAQ,EAAE;YACNC,OAAO,EAAE;UADH,CAHR;UAMFC,MAAM,EAAE,IANN;UAOFC,KAAK,EAAE,EAPL;UAQFC,QAAQ,EAAE;QARR,CAdC;QAwBPC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLzB,MAAM,EAAE,IADH;YAEL0B,IAAI,EAAE;UAFD,CADL;UAKJd,KAAK,EAAE;QALH,CAxBD;QA+BPE,OAAO,EAAE;UACLF,KAAK,EAAE;QADF,CA/BF;QAkCPe,KAAK,EAAE;UACHC,IAAI,EAAE;QADH,CAlCA;QAqCPC,IAAI,EAAE;UACFjB,KAAK,EAAE;YAAEkB,GAAG,EAAE,CAAP;YAAUC,GAAG,EAAE;UAAf;QADL;MArCC,CAxBN;MAiELC,YAAY,EAAE;IAjET;EAHT;IAAA;IAAA;IAAA;EAAA,QADJ;AAwEH,CArFD;;GAAM3C,a;;KAAAA,a;AAuFN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}