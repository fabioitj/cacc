{"ast":null,"code":"// import { useEffect } from \"react\";\n// import { useState } from \"react\";\n// import { deleteRegistro, saveRegistro, getFullContas } from \"../../../hooks/contasApi\";\n// import \"./ContasAdmin.css\";\n// import { FaRegEdit, FaTrash, FaPlus } from \"react-icons/fa\";\n// import { Button } from \"reactstrap\";\n// import Modal from \"../../../components/Modal/Modal.js\";\n// import Field from \"../../../components/Field/field\";\n// const ContasAdmin = () => {\n//     const [list, setList] = useState([]);\n//     const [modalCreateIsOpen, setModalCreateIsOpen] = useState(false);\n//     useEffect(() => {\n//         // refreshTable();\n//     }, []);\n//     useEffect(() => {\n//         if(!modalCreateIsOpen)\n//             resetFields();\n//     }, [modalCreateIsOpen])\n//     const refreshTable = () => {\n//         getFullContas()\n//         .then((response) => {\n//             let data = response.data;\n//             console.log(data);\n//             if(data.success){   \n//                 setList(data.data);\n//             }\n//         })\n//         .catch((error) => {\n//             alert(error);\n//         });\n//     }\n//     const editarRegistro = (item) => {\n//         setIdconta(item.idconta);\n//         setNome(item.nome);\n//         setEmail(item.email);\n//         setSenha\n//         setModalCreateIsOpen(true);\n//     }\n//     const deleteRegistroButton = (id) => {\n//         deleteRegistro(id)\n//             .then(() => {\n//                 refreshTable();\n//             })\n//             .catch((error) => alert(error));\n//     }\n//     const createNewRegister = () => {\n//         setModalCreateIsOpen(true);\n//     }\n//     const [idconta, setIdconta] = useState(\"\");\n//     const [nome, setNome] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [senha, setSenha] = useState(\"\");\n//     const createCallback = () => {\n//         let dados = {\n//             idconta,\n//             nome,\n//             email\n//         };\n//         saveRegistro(dados)\n//             .then((response) => {\n//                 console.log(response);\n//                 let data = response.data;\n//                 if(data.success)\n//                     refreshTable();\n//                 else\n//                     alert(data.itens[0].mensagem);\n//             })\n//             .catch((error) => alert(error));\n//         resetFields();\n//     }\n//     const resetFields = () => {\n//         setIdconta(\"\");\n//         setNome(\"\");\n//         setEmail(\"\");\n//         setSenha(\"\");\n//     }\n//     return (\n//         <>\n//             <div className=\"Diretoria\">\n//                 <div className=\"DiretoriaBox\">\n//                     <div className=\"DiretoriaBoxHeader\">\n//                         <h2>Gerenciamento de Contas</h2>\n//                         <button onClick={createNewRegister} className=\"btn btn-success\"><FaPlus/></button>\n//                     </div>\n//                     <div className=\"DiretoriaBoxBody\">\n//                         <div className=\"RowFilters\">\n//                             {/* TODO: FILTERS AND INSERT BUTTON */}\n//                         </div>\n//                         <div className=\"RowTable\">\n//                             <table className=\"table table-striped table-bordered\">\n//                                 <thead>\n//                                     <tr>\n//                                         <th></th>\n//                                         <th></th>\n//                                         <th>Id</th>\n//                                         <th style={{width: \"90%\"}}>Nome</th>\n//                                         <th>Email</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody className=\"DiretoriaTableBody\">\n//                                     {\n//                                         list.map((item, i) => {\n//                                             return (\n//                                                 <tr>\n//                                                     <td><Button className=\"Button\" color=\"primary\" onClick={() => { editarRegistro(item)}} title=\"Editar Registro\"><FaRegEdit/></Button></td>\n//                                                     <td><Button className=\"Button\" color=\"danger\" onClick={() => { deleteRegistroButton(item.idconta )}} title=\"Excluir registro\"><FaTrash/></Button></td>\n//                                                     <td style={{padding: \"8px\"}}>{item.idconta}</td>\n//                                                     <td style={{textAlign: \"left\", padding: \"8px\"}}>{item.nome}</td>\n//                                                     <td>{item.email}</td>\n//                                                 </tr>\n//                                             )\n//                                         })\n//                                     }\n//                                 </tbody>\n//                             </table>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//             {modalCreateIsOpen && \n//                 <Modal title=\"Cadastro de Cargo\" btnText=\"Salvar\" setOpenModal={setModalCreateIsOpen} callback={createCallback}>\n//                     <form role=\"form\" className=\"FormCreateRegister\">\n//                         <div className=\"FormBox\">\n//                             <div className=\"BoxField\">\n//                                 <Field label=\"Descrição\" classe=\"LighterThemeInput\" typeInput=\"text\" typeOfField=\"input\" get={nome} set={setNome}/>\n//                                 {/* <label>Nome</label>\n//                                 <input type=\"text\" value={nome} onChange={(e) => {setNome(e.target.value)}} placeholder=\"Nome...\"/> */}\n//                             </div>\n//                             <div className=\"BoxField\">\n//                                 <Field label=\"Ordem de Importância\" classe=\"LighterThemeInput\" typeInput=\"number\" typeOfField=\"input\" get={ordem} set={setOrdem}/>\n//                                 {/* <label>Cargo</label>\n//                                 <input type=\"text\" value={cargo} onChange={(e) => {setCargo(e.target.value)}} placeholder=\"Cargo...\"/> */}\n//                             </div>\n//                         </div>\n//                     </form>\n//                 </Modal>\n//             }\n//         </>\n//     );\n// }\n// export default ContasAdmin;","map":{"version":3,"names":[],"sources":["C:/Users/fabio/Documents/cacc/cacc_frontend/src/pages/Admin/ContasAdmin/ContasAdmin.js"],"sourcesContent":["// import { useEffect } from \"react\";\r\n// import { useState } from \"react\";\r\n// import { deleteRegistro, saveRegistro, getFullContas } from \"../../../hooks/contasApi\";\r\n// import \"./ContasAdmin.css\";\r\n// import { FaRegEdit, FaTrash, FaPlus } from \"react-icons/fa\";\r\n// import { Button } from \"reactstrap\";\r\n// import Modal from \"../../../components/Modal/Modal.js\";\r\n// import Field from \"../../../components/Field/field\";\r\n\r\n// const ContasAdmin = () => {\r\n\r\n//     const [list, setList] = useState([]);\r\n//     const [modalCreateIsOpen, setModalCreateIsOpen] = useState(false);\r\n    \r\n//     useEffect(() => {\r\n//         // refreshTable();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if(!modalCreateIsOpen)\r\n//             resetFields();\r\n//     }, [modalCreateIsOpen])\r\n\r\n//     const refreshTable = () => {\r\n//         getFullContas()\r\n//         .then((response) => {\r\n//             let data = response.data;\r\n//             console.log(data);\r\n//             if(data.success){   \r\n//                 setList(data.data);\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             alert(error);\r\n//         });\r\n//     }\r\n\r\n//     const editarRegistro = (item) => {\r\n//         setIdconta(item.idconta);\r\n//         setNome(item.nome);\r\n//         setEmail(item.email);\r\n//         setSenha\r\n\r\n//         setModalCreateIsOpen(true);\r\n//     }\r\n\r\n//     const deleteRegistroButton = (id) => {\r\n//         deleteRegistro(id)\r\n//             .then(() => {\r\n//                 refreshTable();\r\n//             })\r\n//             .catch((error) => alert(error));\r\n//     }\r\n\r\n//     const createNewRegister = () => {\r\n//         setModalCreateIsOpen(true);\r\n//     }\r\n\r\n//     const [idconta, setIdconta] = useState(\"\");\r\n//     const [nome, setNome] = useState(\"\");\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [senha, setSenha] = useState(\"\");\r\n\r\n//     const createCallback = () => {\r\n//         let dados = {\r\n//             idconta,\r\n//             nome,\r\n//             email\r\n//         };\r\n\r\n//         saveRegistro(dados)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let data = response.data;\r\n//                 if(data.success)\r\n//                     refreshTable();\r\n//                 else\r\n//                     alert(data.itens[0].mensagem);\r\n//             })\r\n//             .catch((error) => alert(error));\r\n\r\n//         resetFields();\r\n//     }\r\n\r\n//     const resetFields = () => {\r\n//         setIdconta(\"\");\r\n//         setNome(\"\");\r\n//         setEmail(\"\");\r\n//         setSenha(\"\");\r\n\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"Diretoria\">\r\n//                 <div className=\"DiretoriaBox\">\r\n//                     <div className=\"DiretoriaBoxHeader\">\r\n//                         <h2>Gerenciamento de Contas</h2>\r\n//                         <button onClick={createNewRegister} className=\"btn btn-success\"><FaPlus/></button>\r\n//                     </div>\r\n//                     <div className=\"DiretoriaBoxBody\">\r\n//                         <div className=\"RowFilters\">\r\n//                             {/* TODO: FILTERS AND INSERT BUTTON */}\r\n//                         </div>\r\n//                         <div className=\"RowTable\">\r\n                            \r\n//                             <table className=\"table table-striped table-bordered\">\r\n//                                 <thead>\r\n//                                     <tr>\r\n//                                         <th></th>\r\n//                                         <th></th>\r\n//                                         <th>Id</th>\r\n//                                         <th style={{width: \"90%\"}}>Nome</th>\r\n//                                         <th>Email</th>\r\n//                                     </tr>\r\n//                                 </thead>\r\n//                                 <tbody className=\"DiretoriaTableBody\">\r\n//                                     {\r\n//                                         list.map((item, i) => {\r\n//                                             return (\r\n//                                                 <tr>\r\n//                                                     <td><Button className=\"Button\" color=\"primary\" onClick={() => { editarRegistro(item)}} title=\"Editar Registro\"><FaRegEdit/></Button></td>\r\n//                                                     <td><Button className=\"Button\" color=\"danger\" onClick={() => { deleteRegistroButton(item.idconta )}} title=\"Excluir registro\"><FaTrash/></Button></td>\r\n//                                                     <td style={{padding: \"8px\"}}>{item.idconta}</td>\r\n//                                                     <td style={{textAlign: \"left\", padding: \"8px\"}}>{item.nome}</td>\r\n//                                                     <td>{item.email}</td>\r\n//                                                 </tr>\r\n//                                             )\r\n//                                         })\r\n//                                     }\r\n//                                 </tbody>\r\n//                             </table>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             {modalCreateIsOpen && \r\n//                 <Modal title=\"Cadastro de Cargo\" btnText=\"Salvar\" setOpenModal={setModalCreateIsOpen} callback={createCallback}>\r\n//                     <form role=\"form\" className=\"FormCreateRegister\">\r\n//                         <div className=\"FormBox\">\r\n//                             <div className=\"BoxField\">\r\n//                                 <Field label=\"Descrição\" classe=\"LighterThemeInput\" typeInput=\"text\" typeOfField=\"input\" get={nome} set={setNome}/>\r\n//                                 {/* <label>Nome</label>\r\n//                                 <input type=\"text\" value={nome} onChange={(e) => {setNome(e.target.value)}} placeholder=\"Nome...\"/> */}\r\n//                             </div>\r\n//                             <div className=\"BoxField\">\r\n//                                 <Field label=\"Ordem de Importância\" classe=\"LighterThemeInput\" typeInput=\"number\" typeOfField=\"input\" get={ordem} set={setOrdem}/>\r\n\r\n//                                 {/* <label>Cargo</label>\r\n//                                 <input type=\"text\" value={cargo} onChange={(e) => {setCargo(e.target.value)}} placeholder=\"Cargo...\"/> */}\r\n//                             </div>\r\n//                         </div>\r\n//                     </form>\r\n//                 </Modal>\r\n//             }\r\n//         </>\r\n\r\n        \r\n//     );\r\n// }\r\n\r\n// export default ContasAdmin;"],"mappings},"metadata":{},"sourceType":"module"}